@mixin display-flex {
  display: flex;
}

@mixin flex-wrap($value: nowrap) {
  flex-wrap: $value;
}

@mixin align-items($value: center) {
  align-items: $value;
  @if $value == flex-start {
    -webkit-box-align: start;
  } @else if $value == flex-end {
    -webkit-box-align: end;
  } @else {
    -webkit-box-align: $value;
  }
}

@mixin align-content($value: center) {
  align-content: $value;
}

@mixin justify-content($value: center) {
  justify-content: $value;
  @if $value == flex-start {
    -webkit-box-pack: start;
  } @else if $value == flex-end {
    -webkit-box-pack: end;
  } @else if $value == space-between {
    -webkit-box-pack: justify;
  } @else {
    -webkit-box-pack: $value;
  }
}

/* Flex Item */
@mixin flex($fg: 1, $fs: null, $fb: null) {
  flex: $fg $fs $fb;
  -webkit-box-flex: $fg;
}

@mixin flex-order($n) {
  order: $n;
  -webkit-box-ordinal-group: $n;
}

@mixin align-self($value: auto) {
  align-self: $value;
}
@mixin flex-direction($value: row) {
  flex-direction: $value;
}

// 省略号
@mixin line($num: 1) {
  overflow: hidden;
  text-overflow: ellipsis;

  @if ($num == 1) {
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $num;

    /* autoprefixer: off */
    -webkit-box-orient: vertical;
  }
}

/**
 * 清楚浮动
 */
@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: block;
  }
}

/**
 * 元素居中定位
 */
@mixin absolute-center($pos: absolute) {
  position: $pos;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/**
 * 固定定位
 */
@mixin fixed($pos: bottom) {
  position: fixed;
  left: 0px;
  right: 0px;
  @if ($pos == top) {
    top: 0px;
  } @else {
    bottom: 0px;
  }
}

/**
 * 色值混合
 */
@function tint($color, $percent) {
  @return mix(#fff, $color, $percent);
}
/**
 * 色值透明度
 */
@function color-percent($color, $percent) {
  @return rgba($color, $percent);
}
